#include <new> // for thread-safe static's placement new
#include <stdint.h> // for uint64_t under Linux/GCC
// cmdline:-std=c++98
void X()
{
  throw ;
}


class Sing
{
  
  public: 
  inline Sing()
  {
    X();
  }
  
};



Sing & Test()
{
  static bool __sGuard;
  alignas(Sing) static char __s[sizeof(Sing)];
  
  if( ! __sGuard )
  {
    try 
    {
      new (&__s) Sing();
      __sGuard = true;
    }
    catch(...)
    {
      __cxa_guard_abort(&__sGuard);
      throw;
    }
    
  }
  return *reinterpret_cast<Sing*>(__s);
}

