// cmdline:-std=c++20




class __lambda_3_29
{
  public: 
  inline /*constexpr */ bool operator()() const
  {
    return true;
  }
  
  using retType_3_29 = auto (*)() -> bool;
  inline constexpr operator retType_3_29 () const noexcept
  {
    return __invoke;
  };
  
  private: 
  static inline /*constexpr */ bool __invoke()
  {
    return __lambda_3_29{}.operator()();
  }
  
  
  public:
  // /*constexpr */ __lambda_3_29() = default;
  
};

template<class F = __lambda_3_29>
bool test = true;

template<>
bool test<__lambda_3_29> = true;
 // fails without initializer

//template<class F = decltype([]() -> bool { return true; })>
//class X{};

int main()
{
  bool t = test<__lambda_3_29>;
  return 0;
}


